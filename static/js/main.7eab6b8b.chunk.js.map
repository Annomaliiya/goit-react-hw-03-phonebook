{"version":3,"sources":["components/Section/Section.module.css","components/Filter/Filter.module.css","components/Section/Section.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","Section","title","children","className","styles","section","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","nameInputId","nanoid","numberInputId","addContact","preventDefault","props","contacts","find","contact","toLowerCase","alert","newContact","id","changeContact","onSubmit","this","label","htmlFor","input","type","onChange","pattern","required","btnAdd","Component","ContactList","deleteFunction","renderContacts","map","contactsListItem","onClick","btnDelete","contactsList","Filter","filter","filterInputId","App","prevState","deleteContact","contactId","getFiltered","normalizeFilter","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7eab6b8b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1nu9Q\",\"title\":\"Section_title__3VHS8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3WyFD\",\"label\":\"Filter_label__1Ysrv\"};","import PropTypes from 'prop-types';\r\nimport styles from './Section.module.css'\r\n\r\nconst Section = ({ title, children}) => {\r\n    return (<section className={styles.section}><h1 className={styles.title}>{title}</h1>\r\n    {children}</section>\r\n    )\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.node\r\n}","import PropTypes from 'prop-types';\r\nimport { nanoid } from 'nanoid';\r\nimport { Component } from \"react\";\r\nimport styles from \"./ContactForm.module.css\"\r\n\r\nclass ContactForm extends Component { \r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const { name, value } = event.currentTarget;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    nameInputId = nanoid();\r\n    numberInputId = nanoid();\r\n    \r\n    \r\n    addContact = (event) => {\r\n        event.preventDefault();\r\n        if (this.props.contacts.find((contact) => {\r\n         return contact.name.toLowerCase() === this.state.name.toLowerCase();\r\n        })) {\r\n             alert(this.state.name + \" is already in contacts.\");\r\n             return;\r\n        }\r\n        const newContact = {\r\n            id: nanoid(),\r\n            name: this.state.name,\r\n            number: this.state.number\r\n        };\r\n        this.props.changeContact(newContact);\r\n    \r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n    render() {\r\n        return <>\r\n        \r\n            <form onSubmit={this.addContact}>\r\n                <label className={styles.label} htmlFor={this.nameInputId}>Name\r\n                    <input className={styles.input}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={this.state.name}\r\n                        onChange={this.handleChange}\r\n                        id={this.nameInputId}\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        required\r\n                    /></label>\r\n                <label className={styles.label} htmlFor={this.numberInputId}>Number\r\n                    <input className={styles.input}\r\n                        type=\"tel\"\r\n                        value={this.state.number}\r\n                        onChange={this.handleChange}\r\n                        id={this.numberInputId}\r\n                        name=\"number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        required\r\n                    /></label>\r\n                <button className={styles.btnAdd} type=\"submit\">Add contact</button>\r\n            </form>\r\n        </>;\r\n    }\r\n};\r\n\r\n\r\nexport default ContactForm;\r\n\r\nContactForm.propTypes = {\r\n    handleChange: PropTypes.func.isRequired\r\n}","import PropTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, deleteFunction }) => {\r\n    const renderContacts = contacts.map(({id, name, number}) => (\r\n        <li key={name} className={styles.contactsListItem}>{name} {number}\r\n        <button onClick={() => deleteFunction(id)} className={styles.btnDelete} >X</button>\r\n        </li>\r\n        \r\n        ))\r\n\r\n    return ( \r\n        <ul className={styles.contactsList}>\r\n            {renderContacts }</ul>)\r\n}\r\nexport default ContactList;\r\n\r\nconst contactShape = {\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.shape(contactShape)).isRequired\r\n}","import PropTypes from 'prop-types';\r\nimport { nanoid } from 'nanoid';\r\nimport styles from './Filter.module.css';\r\n\r\n\r\nconst Filter = ({ filter, handleChange, }) => {\r\n  \r\n  \r\n  const filterInputId = nanoid();\r\n  return (\r\n      <>\r\n        <label className={styles.label} htmlFor={filterInputId}>Find contacts by name\r\n          <input className={styles.input}\r\n            type=\"text\"\r\n            name=\"filter\"\r\n            value={filter}\r\n            onChange={handleChange}\r\n            id={filterInputId}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n          /></label>\r\n      </>)\r\n}\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  handleChange:PropTypes.func.isRequired\r\n}","\nimport { Component } from 'react';\n\n\nimport Section from './components/Section';\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\"\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  changeContact = (newContact) => {\n    this.setState(prevState => {\n      return (\n        { contacts: [...prevState.contacts, newContact] }\n      );\n    })\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  deleteContact = (contactId) => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  getFiltered = () => {\n    const { contacts, filter } = this.state;\n    if (!filter) {\n      return contacts;\n    }\n    const normalizeFilter = filter.toLowerCase();\n\n    const filteredContacts = contacts.filter(({ name }) => {\n      const normalizeName = name.toLowerCase();\n      const result = normalizeName.includes(normalizeFilter);\n      return result;\n    })\n\n    return filteredContacts;\n  }\n\n  render() {\n    const { getFiltered } = this;\n    const contacts = getFiltered();\n    return (\n      <>\n        <Section title=\"Phonebook\">\n          <ContactForm contacts={this.state.contacts} handleChange={this.handleChange} changeContact={this.changeContact} />\n        </Section>\n        <Section title='Contacts'>\n          <Filter filter={this.state.filter} handleChange={this.handleChange} />\n          <ContactList contacts={contacts} deleteFunction={this.deleteContact}\n          />\n\n        </Section>\n      </>\n    )\n  };\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__31vFM\",\"input\":\"ContactForm_input__1Ut_4\",\"btnAdd\":\"ContactForm_btnAdd__3bDT0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsListItem\":\"ContactList_contactsListItem__2JVPN\",\"btnDelete\":\"ContactList_btnDelete__3lNRZ\"};"],"sourceRoot":""}